<!-- Main content -->
<section class="content" id="lists">
	<div class="row">
		<div :class="{ 'col-lg-12': !isForm, 'col-lg-6': isForm }">
			<div class="box">
				<div class="box-header">
					<div class="row">
						<div class="col-md-3">
							<label for="type">Status</label>
							<select v-model="filterStatus" class="form-control">
								<option value="">-</option>
								<option v-for="s in status" :value="s">{{ s }}</option>
							</select>
						</div>
					</div>
					<div class="row">
						<div class="col-md-3">
							<label for="type">Usia</label>
							<input type="number" v-model="filterUsia" class="form-control">
						</div>
					</div>
					<div class="row">
						<div class="col-md-3">
							<label for="type">Tanggal</label>
							<input type="date" v-model="cari.tgl_awal" class="form-control">
						</div>
						<div class="col-md-3">
							<label for="type">&nbsp;</label>
							<input type="date" v-model="cari.tgl_akhir" class="form-control">
						</div>
					</div>
					<div class="row">
						&nbsp;
					</div>
					<div class="row">
						<div class="col-md-3">
							<a href="" class="btn btn-primary" @click.prevent="tambah"><i class="fa fa-plus"></i> Tambah Data</a>
						</div>
						<div class="col-md-3">
							<a href="" class="btn btn-info" @click.prevent="download"><i class="fa fa-download"></i> Download Rekap Data</a>
						</div>
					</div>
				</div>
				<div class="box-body">
					<table class="table table-bordered">
						<tr>
							<th style="width: 50px" class="text-center">#
								<a href="" @click.prevent="sort('no')" class="pull-right"><i class="fa fa-arrows-v"></i></a>
							</th>
							<th style="width: 50px" class="text-center">Tanggal
								<a href="" @click.prevent="sort('tanggal')" class="pull-right"><i class="fa fa-arrows-v"></i></a>
							</th>
							<th style="width: 50px" class="text-center">Nomor Pasien
								<a href="" @click.prevent="sort('no_pasien')" class="pull-right"><i class="fa fa-arrows-v"></i></a>
							</th>
							<th style="width: 50px" class="text-center">Usia (th)
								<a href="" @click.prevent="sort('usia')" class="pull-right"><i class="fa fa-arrows-v"></i></a>
							</th>
							<th style="width: 50px" class="text-center">Status
								<a href="" @click.prevent="sort('status')" class="pull-right"><i class="fa fa-arrows-v"></i></a>
							</th>
							<th style="width: 50px">&nbsp;</th>
						</tr>
						<tr v-for="(o, i) in sortfiltered_data">
							<td class="text-center" v-html="o.no"></td>
							<td class="text-center" v-html="tanggal(o.tanggal)"></td>
							<td class="text-center" v-html="o.no_pasien"></td>
							<td class="text-center" v-html="o.usia"></td>
							<td class="text-center" v-html="o.status"></td>
							<td>
								<a href="" @click.prevent="ubah(o)" class="btn btn-info"><i class="fa fa-pencil"></i> Ubah</a>
								<a href="" @click.prevent="hapus(o)" class="btn btn-danger"><i class="fa fa-eraser"></i> Hapus</a>
							</td>
						</tr>
					</table>
				</div>				
				<div class="box-footer clearfix" v-if="!isForm">
					<ul class="pagination pagination-sm no-margin pull-right">
						<li><a href="#" @click.prevent="prevPage">&laquo;</a></li>
						<li v-for="p in totalPages"><a href="#" @click.prevent="page(p)" v-if="Math.abs(p - currentPage)<5||p==1||p==totalPages-1">{{ p }}</a></li>
						<li><a href="#" @click.prevent="nextPage">&raquo;</a></li>
					</ul>
				</div>
			</div>
		</div>
		<div class="col-lg-6" v-if="isForm">
			<div class="box">
				<div class="box-header">
					<h4 for="label" v-html="label"></h4>
				</div>
				<div class="box-body">
					<div class="row">
						<div class="col-md-5">
							<label for="type">Tanggal</label>
							<input type="date" v-model="pasien.tanggal" class="form-control">
						</div>
					</div>
					<div class="row">
						<div class="col-md-3">
							<label for="type">No. Pasien</label>
							<input type="text" v-model="pasien.no_pasien" class="form-control">
						</div>
					</div>
					<div class="row">
						<div class="col-md-3">
							<label for="type">Usia</label>
							<input type="number" v-model="pasien.usia" class="form-control">
						</div>
					</div>
					<div class="row">
						<div class="col-md-3">
							<label for="type">Status</label>
							<select v-model="pasien.status" class="form-control">
								<option value="">-</option>
								<option v-for="s in status" :value="s">{{ s }}</option>
							</select>
						</div>
					</div>
				</div>
				<div class="box-footer clearfix pull-right">
					<button @click.prevent="simpan" class="btn btn-sm btn-success">
						<i class="fa fa-save"></i> Simpan
					</button>
					<a href="" @click.prevent="tutup" class="btn btn-sm btn-danger">
						<i class="fa fa-times"></i> Tutup
					</a>
				</div>
			</div>
		</div>
	</div>
</section>
<!-- /Main content -->
<script>
	var lists = new Vue({
		el: '#lists',
		data: {
			isForm: false,
			label: 'Tambah',
			status: [ 'Sembuh', 'Dirawat', 'Meninggal' ],
			filterStatus: '',
			filterUsia: 0,
			cari: {
				tgl_awal: '',
				tgl_akhir: ''
			},
			pasien: {},
			list: [],
			currentSort:'no',
			currentSortDir: 'desc',
			total: 0,
			pageSize:10,
			currentPage:1
		},
		watch: {
			cari: {
        immediate: true,
        deep: true,
        handler(nv) {
					if (!_.isEmpty(nv))
          this.reload();					
				}
			},
			filterUsia: {
				immediate: true,
        deep: true,
        handler(nv) {
          this.reload();					
				}
			}
		},
		computed: {
			totalPages() {
        return Math.ceil(this.total / this.pageSize);
      },
			sortfiltered_data() {
				return this.list.sort((a,b) => {
					let modifier = 1;
					if(this.currentSortDir === 'asc') modifier = -1;
					if(a[this.currentSort] < b[this.currentSort]) return -1 * modifier;
          if(a[this.currentSort] > b[this.currentSort]) return 1 * modifier;
          return 0;
				}).filter((row, index) => {
					let start = (this.currentPage-1)*this.pageSize,
							end = this.currentPage*this.pageSize;
					if (!_.isEmpty(this.filterStatus)) {
						if (index >= start && index < end &&
							(_.includes(_.lowerCase(this.filterStatus), _.lowerCase(row.status)))
						) return true;
					}
					else {
						if (index >= start && index < end) return true;
					}
				})
			}
		},
		methods: {
			reload() {
				let vm = this;
				vm.filterStatus = '';
				vm.pasien = {};
				vm.isForm = false;
				axios.post('/data/list', vm.cari).then((res) => {
					list = res.data.data;
					if (vm.filterUsia > 0) {
						list = _.filter(res.data.data, (o) => {
							return vm.filterUsia >= o.usia && vm.filterUsia <= o.usia;
						});
					}
					vm.list = list;
					vm.total = list.length;
				})
			},
			tambah() {
				let vm = this;
				vm.label = 'Tambah';
				vm.pasien = {};
				vm.isForm = true;
			},
			ubah(o) {
				let vm = this;
				vm.label = 'Ubah';
				vm.pasien = o;
				vm.isForm = true;
			},
			hapus(o) {
				let vm = this;
				axios.get('/data/hapus/'+o.id).then((res) => {
					vm.reload();
				})
			},
			simpan() {
				let vm = this, data = {
					label: vm.label,
					pasien: vm.pasien
				};
				axios.post('/data/simpan', data).then((res) => {
					vm.reload();
				});
			},
			tutup() {
				let vm = this;
				vm.reload();
			},
			tanggal(t) {
				return moment(t).format('DD-MM-YYYY');
			},
			download() {
				let vm = this;

			},
			sort(s) {
        //if s == current sort, reverse
        if(s === this.currentSort) {
          this.currentSortDir = this.currentSortDir==='asc'?'desc':'asc';
      	}
			},			
      prevPage() {
        if(this.currentPage > 1) this.currentPage--;
			},
			nextPage() {
        if(this.currentPage > 1) this.currentPage++;
			},
		},
		mounted() {
			let vm = this;
			vm.reload();
		}
	})
</script>